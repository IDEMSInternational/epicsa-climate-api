# Build docker image using buildx and deploy to google cloud run
# See implementation notes at bottom of file

name: cloud_deploy_buildx

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_TAG: ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT }}/${{ vars.GCP_CONTAINER_REPO }}/${{ vars.GCP_SERVICE }}:${{github.sha}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - id: "auth"
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{secrets.GCP_SA_KEY_B64}}
          token_format: "access_token"

      - name: Log in to Google Artifact Repository
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.GCP_REGION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Push container image
        id: build
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha, mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{secrets.GCP_SA_KEY_B64}}
          token_format: "access_token"

      # Deploy to google cloud
      # https://github.com/google-github-actions/deploy-cloudrun
      # https://cloud.google.com/run/docs/reference/iam/roles#additional-configuration
      # requires additional "service account user" and "cloud run admin" roles
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ vars.GCP_SERVICE }}
          region: ${{ vars.GCP_REGION }}
          image: ${{ env.IMAGE_TAG }}
          project_id: ${{ vars.GCP_PROJECT }}
          labels: |
            commit-sha=${{github.sha}}
          secrets: |
            /run/secrets/service_account_key=${{ vars.GCP_SECRET_SERVICE_ACCOUNT_KEY }}

      - name: Show API URL
        run: echo ${{ steps.deploy.outputs.url }}
#===========================================================================
#     Notes
#===========================================================================

# While a similar build/deploy pipeline can be triggered directly from google cloud builder and run
# this github action provides more flexibility for customising build variables, deployment targets,
# tags, and build time resources

# In order to run secrets will need to be provided for:

# GCP_SA_KEY_B64 - base64 encoded service account with sufficient permissions for deploying (see note below)
# EPICSA_DATA_SA_KEY_B64 - base64 encoded service account with permission to access project data storage (i.e. GCS)
# EPICSA_DATA_AUTH_TOKEN - (DEPRECATED) auth token for access to e-picsa data (same as in local .env file)

# Additionally the relevant Artifact Registry must be manually created before use (tbc?)
# Additionally first run may need owner permission on Service account to ensure relevant APIs enabled (tbc?)

# The following APIs will need to be enabled
# https://console.cloud.google.com/apis/library/run.googleapis.com

# GCP Service Account - Permissions required (additional notes in individual google actions)
# - Cloud Run Admin
# - Cloud Run Sevice Agent (?) (comments in https://stackoverflow.com/a/55788899/5693245)
# - Service Account Token Creator (?)
# - Artifact registry admin (initial build)
# - be a member of PROJECT_NUMBER-compute@developer.gserviceaccount.com, with role Service Account User
# - the parent  PROJECT_NUMBER-compute@developer.gserviceaccount.com also needs Service Account Token Creator permission on itself

# DATA Service Account - Required permissions
# - Cloud storage bucket data viewer (?)

# Post successful deployment cloud run may need to be configured to allow higher memory limit (min 1GB),
# which will also apply to all future deployments

#===========================================================================
#     TROUBLESHOOTING
#===========================================================================

# buildx builds failing for unknown reason (says image not found). Possibly related to:
# https://github.com/google-github-actions/deploy-cloudrun/issues/420
# https://github.com/google-github-actions/setup-gcloud/issues/135

# Also seems like MediaType tag can differ which is a feature of buildx builds
# "application/vnd.docker.distribution.manifest.v2+json" vs "application/vnd.oci.image.index.v1+json"
# https://www.docker.com/blog/multi-arch-build-and-images-the-simple-way/

# But strange as working in builds such as
# https://github.com/yewstack/yew-playground/actions/runs/2367392240/workflow
# https://github.com/Doarakko/cloud-run-playground/blob/main/.github/workflows/deploy.yml

# recommended
# https://github.com/google-github-actions/example-workflows/blob/main/workflows/deploy-cloudrun/cloudrun-docker.yml
